<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Online Junqi</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="A real-time multi-player junqi app">
        <meta name="author" content="">
        <link href="/css/bootstrap.min.css" rel="stylesheet">
        <link href="/css/styles.css" rel="stylesheet">
    </head>
    <body>
        <div id="banner" class="jumbotron">
            <div class="container">
                <h1 style="color: white;">Online Junqi</h1>
                <p>
                    The game Junqi (军旗), which translates to "army chess", is a Chinese board game that can now be played directly in your browser. 
                    The objective of the game is to capture your opponent's flag.
                </p>
            </div>
        </div>
        <div class="container">
            <table class="table ">
              <tbody>
                                  <tr>
                  <td><h3>Join Game</h3></td>
                  <td>
                      <!-- <form id="joinForm" action="/join" method="POST" role="form"> -->
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="gameID">Select a Game</label>
                                        <select id="game-id-list" class="form-control" name="game-id">
                                        </select>
                                    </div>
                                </div>    
                            </div>
                        <button onclick="Join()" class="btn btn-primary">Join Game</button>
                        <button onclick="HostMPC()" class="btn btn-primary">Test MPC</button>
                    <!-- </form> -->
                    </td>
                </tr>
                <tr>
                  <td><h3>New Game</h3></td>
                  <td>
                      <!-- <form id="startForm" action="/start" method="POST" role="form"> -->
                        <!-- <form id="startForm" role="form">     -->
                          <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Play as</label>
                                        <div>
                                            <div data-toggle="buttons" class="btn-group">
                                                <label class="btn btn-default active">
                                                    <input type="radio" name="player-color" value="blue" checked="checked">Blue
                                                </label>
                                                <label class="btn btn-default">
                                                    <input type="radio" name="player-color" value="red">Red
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>      
                        <button onclick=StartGame() class="btn btn-primary">Start Game</button>
                    <!-- </form> -->
                    </td>
                </tr>

              </tbody>
            </table> 
        </div>
        <script src="/js/jquery.min.js"></script>
        <script src="/js/bootstrap.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
        <script>
            var web3, JunqiContract, currentAccount;
            async function StartGame(){
                try {
                    JunqiContract.methods.declare().send({from: currentAccount}).once('receipt', (receipt)=>{
                        console.log(receipt['events']['GameIDs'].returnValues);
                        var gameID = receipt['events']['GameIDs'].returnValues.gameID;
                        location.replace("http://localhost:3000/game/"+gameID+"?playerColor=blue&playerName=player1");
                    });
                } catch (error) {
                    console.log(error);
                }
            }
            async function Join(){
                try {
                    var e = document.getElementById("game-id-list");
                    var gameID = e.options[e.selectedIndex].text;
                    console.log(gameID);
                    JunqiContract.methods.join(parseInt(gameID, 10)).send({from: currentAccount}).once('receipt', (receipt)=>{
                        console.log(receipt);
                        location.replace("http://localhost:3000/game/"+gameID+"?playerColor=red&playerName=player2");
                    });
                } catch (error) {
                    console.log(error);
                }
            }
            async function Init(){
                if (window.ethereum != null) {
                web3 = new Web3(window.ethereum);
                try {
                    await window.ethereum.enable();
                    var accounts = await web3.eth.requestAccounts();
                    console.log(accounts[0]);
                    currentAccount = accounts[0];
                    // Connect to contract
                    const data = await $.getJSON('/json/Junqi.json');
                    console.log(data['abi']);
                    const JunqiAddress = data['networks']['5777']['address'];
                    console.log(JunqiAddress)
                    JunqiContract = new web3.eth.Contract(data['abi'], JunqiAddress);
                    // Get game id List
                    const numberOfActiveGames = await JunqiContract.methods.n_games().call();
                    console.log(numberOfActiveGames);
                    select = document.getElementById('game-id-list');
                    for (i=0;i<numberOfActiveGames;i++){
                        const gameID = await JunqiContract.methods.gameList(i).call();
                        var opt = document.createElement('option');
                        opt.value = gameID;
                        opt.innerHTML = gameID;
                        select.appendChild(opt);
                        console.log(gameID);
                    }
                } catch (error) {
                    console.log(error);
                }
                }
            }
            async function HostMPC() {
                console.log('DEBUG: retrieveing MPC result...')
                const data = await $.getJSON('/json/mpc.json');
                console.log('DEBUG: data = ', data);
            }
            Init();
        </script>
    </body>
</html>